<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hc.modules.lesson.mapper.LessonMapper">

   <resultMap id="lessonResultMap" type="com.hc.modules.lesson.entity.LessonEntity">
       <id property="id" column="id"/>
       <result property="name" column="name"/>
       <result property="classId" column="class_id"/>
       <result property="classHour" column="class_hour"/>
       <result property="status" column="status"/>
       <result property="startDate" column="start_date"/>
       <result property="endDate" column="end_date"/>
       <result property="lessonNow" column="lesson_now"/>
       <result property="createTime" column="create_time"/>
       <collection property="studentEntityList" ofType="com.hc.modules.student.entity.StudentEntity" javaType="ArrayList">
           <id property="id" column="s_id"/>
           <result property="name" column="s_name"/>
           <result property="gender" column="gender"/>
           <result property="birth" column="birth"/>
           <result property="guarder" column="guarder"/>
           <result property="guarderPhone" column="guarder_phone"/>
           <result property="createTime" column="create_time"/>
       </collection>
   </resultMap>

    <resultMap id="lessonStudentMap" type="com.hc.modules.student.entity.StudentLessonEntity" extends="studentMap">
        <result property="status" column="status"/>
        <result property="signTime" column="sign_time"/>
    </resultMap>

    <resultMap id="studentMap" type="com.hc.modules.student.entity.StudentEntity">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="birth" column="birth"/>
        <result property="guarder" column="guarder"/>
        <result property="guarderPhone" column="guarder_phone"/>
        <result property="address" column="address"/>
    </resultMap>

    <select id="getClassLessonList" resultMap="lessonResultMap">
        SELECT a.id,a.name,a.class_id,a.class_hour,a.status,a.start_date,a.end_date,a.lesson_now,a.create_time,
        c.id AS s_id, c.name AS s_name,c.gender,c.birth,c.guarder,c.guarder_phone
        FROM lesson a
        LEFT JOIN lesson_student b ON a.id = b.lesson_id
        LEFT JOIN student c ON b.student_id = c.id
        WHERE class_id=#{cid}
    </select>

    <insert id="insertLesson">
        INSERT INTO lesson(name,class_id,class_hour,start_date,end_date)
        VALUES (#{name},#{classId},#{classHour},#{startDate},#{endDate})
    </insert>

    <insert id="insertLessonStudents">
        INSERT INTO lesson_student(lesson_id, student_id)
        VALUES
        <foreach collection ="list" item="item" separator ="," index="index">
            (#{coid}, #{item})
        </foreach >
    </insert>

    <select id="findCoursePackage" resultType="com.hc.modules.student.entity.CoursePackageEntity">
        SELECT * FROM course_package WHERE id =
        (SELECT c_p_id FROM class_student WHERE s_id=#{studentId} AND c_id =
        (SELECT class_id FROM lesson WHERE id = #{id}))
    </select>

    <update id="updateCoursePackage">
        UPDATE course_package SET consumed_class_hour=#{consumedClassHour}, left_class_hour=#{leftClassHour} WHERE id=#{id}
    </update>

    <select id="getLesson" resultType="com.hc.modules.lesson.entity.LessonEntity">
        SELECT * FROM lesson WHERE id=#{lessonId}
    </select>

    <select id="getLessonStudentList" resultMap="lessonStudentMap">
        SELECT  b.id,b.name,b.gender,b.birth,b.guarder,b.guarder_phone,b.address,a.status,a.sign_time FROM lesson_student a
        LEFT JOIN student b ON a.student_id = b.id
        WHERE a.lesson_id=#{lessonId}
    </select>

    <delete id="deleteLessonStudent">
        DELETE FROM lesson_student WHERE lesson_id = #{lessonId}
    </delete>

    <select id="lessonAbsentStudentList" resultMap="studentMap">
         SELECT  b.id,b.name,b.gender,b.birth,b.guarder,b.guarder_phone,b.address
        FROM class_student a LEFT JOIN student b ON a.s_id = b.id WHERE a.c_id=#{classId}
        AND b.id NOT IN (select student_id from lesson_student where lesson_id=#{lessonId})

    </select>

    <delete id="removeLessonStudent">
        DELETE FROM lesson_student WHERE student_id = #{studentId} AND lesson_id=#{lessonId}
    </delete>

    <update id="lessonSign">
        UPDATE lesson_student SET status=1 WHERE student_id=#{studentId} AND lesson_id=#{lessonId}
    </update>
</mapper>
